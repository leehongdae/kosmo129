/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.87
 * Generated at: 2023-06-26 06:58:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.calendar;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class calendar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1667440146000L));
    _jspx_dependants.put("jar:file:/C:/00.KOSMO129/30.web/el_kos_spring_work/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/kosSpring/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");

	HttpSession bpSession = request.getSession();
	String m_nick = (String)session.getAttribute("m_nick");
	System.out.println("m_nick >>> : " + m_nick);

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>캘린더</title>\r\n");
      out.write("<link rel=\" shortcut icon\" href=\"/kosSpring/calendar/image/favicon.ico\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/kosSpring/calendar/vendor/css/fullcalendar.min.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/kosSpring/calendar/vendor/css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href='/kosSpring/calendar/vendor/css/select2.min.css' />\r\n");
      out.write("<link rel=\"stylesheet\" href='/kosSpring/calendar/vendor/css/bootstrap-datetimepicker.min.css' />\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Open+Sans:400,500,600\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/kosSpring/calendar/css/main.css\">\r\n");
      out.write("	\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("        <!-- 일자 클릭시 메뉴오픈 -->\r\n");
      out.write("        <div id=\"contextMenu\" class=\"dropdown clearfix\">\r\n");
      out.write("            <ul class=\"dropdown-menu dropNewEvent\" role=\"menu\" aria-labelledby=\"dropdownMenu\"\r\n");
      out.write("                style=\"display:block;position:static;margin-bottom:5px;\">\r\n");
      out.write("                <li><a tabindex=\"-1\" href=\"#\">카테고리1</a></li>\r\n");
      out.write("                <li><a tabindex=\"-1\" href=\"#\">카테고리2</a></li>\r\n");
      out.write("                <li><a tabindex=\"-1\" href=\"#\">카테고리3</a></li>\r\n");
      out.write("                <li><a tabindex=\"-1\" href=\"#\">카테고리4</a></li>\r\n");
      out.write("                <li class=\"divider\"></li>\r\n");
      out.write("                <li><a tabindex=\"-1\" href=\"#\" data-role=\"close\">Close</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div id=\"wrapper\">\r\n");
      out.write("            <div id=\"loading\"></div>\r\n");
      out.write("            <div id=\"calendar\"></div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <!-- 일정 추가 MODAL -->\r\n");
      out.write("        <div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" id=\"eventModal\">\r\n");
      out.write("            <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("                <div class=\"modal-content\">\r\n");
      out.write("                    <div class=\"modal-header\">\r\n");
      out.write("                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span\r\n");
      out.write("                                aria-hidden=\"true\">&times;</span></button>\r\n");
      out.write("                        <h4 class=\"modal-title\"></h4>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"modal-body\">\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"row\">\r\n");
      out.write("                            <div class=\"col-xs-12\">\r\n");
      out.write("                                <label class=\"col-xs-4\" for=\"edit-allDay\">하루종일</label>\r\n");
      out.write("                                <label><input class='allDayNewEvent' id=\"edit-allDay\" type=\"checkbox\"></label>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("						\r\n");
      out.write("                        <div class=\"row\">\r\n");
      out.write("                            <div class=\"col-xs-12\">\r\n");
      out.write("                                <label class=\"col-xs-4\" for=\"edit-title\">일정명</label>\r\n");
      out.write("                                <input class=\"inputModal\" type=\"text\" name=\"edit-title\" id=\"edit-title\"\r\n");
      out.write("                                    required=\"required\" />\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"row\">\r\n");
      out.write("                            <div class=\"col-xs-12\">\r\n");
      out.write("                                <label class=\"col-xs-4\" for=\"edit-start\">시작</label>\r\n");
      out.write("                                <input class=\"inputModal\" type=\"text\" name=\"edit-start\" id=\"edit-start\" />\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"row\">\r\n");
      out.write("                            <div class=\"col-xs-12\">\r\n");
      out.write("                                <label class=\"col-xs-4\" for=\"edit-end\">끝</label>\r\n");
      out.write("                                <input class=\"inputModal\" type=\"text\" name=\"edit-end\" id=\"edit-end\" />\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"row\">\r\n");
      out.write("                            <div class=\"col-xs-12\">\r\n");
      out.write("                                <label class=\"col-xs-4\" for=\"edit-type\">구분</label>\r\n");
      out.write("                                <select class=\"inputModal\" type=\"text\" name=\"edit-type\" id=\"edit-type\">\r\n");
      out.write("                                    <option value=\"카테고리1\">카테고리1</option>\r\n");
      out.write("                                    <option value=\"카테고리2\">카테고리2</option>\r\n");
      out.write("                                    <option value=\"카테고리3\">카테고리3</option>\r\n");
      out.write("                                    <option value=\"카테고리4\">카테고리4</option>\r\n");
      out.write("                                </select>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"row\">\r\n");
      out.write("                            <div class=\"col-xs-12\">\r\n");
      out.write("                                <label class=\"col-xs-4\" for=\"edit-color\">색상</label>\r\n");
      out.write("                                <select class=\"inputModal\" name=\"color\" id=\"edit-color\">\r\n");
      out.write("                                    <option value=\"#D25565\" style=\"color:#D25565;\">빨간색</option>\r\n");
      out.write("                                    <option value=\"#9775fa\" style=\"color:#9775fa;\">보라색</option>\r\n");
      out.write("                                    <option value=\"#ffa94d\" style=\"color:#ffa94d;\">주황색</option>\r\n");
      out.write("                                    <option value=\"#74c0fc\" style=\"color:#74c0fc;\">파란색</option>\r\n");
      out.write("                                    <option value=\"#f06595\" style=\"color:#f06595;\">핑크색</option>\r\n");
      out.write("                                    <option value=\"#63e6be\" style=\"color:#63e6be;\">연두색</option>\r\n");
      out.write("                                    <option value=\"#a9e34b\" style=\"color:#a9e34b;\">초록색</option>\r\n");
      out.write("                                    <option value=\"#4d638c\" style=\"color:#4d638c;\">남색</option>\r\n");
      out.write("                                    <option value=\"#495057\" style=\"color:#495057;\">검정색</option>\r\n");
      out.write("                                </select>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"row\">\r\n");
      out.write("                            <div class=\"col-xs-12\">\r\n");
      out.write("                                <label class=\"col-xs-4\" for=\"edit-desc\">설명</label>\r\n");
      out.write("                                <textarea rows=\"4\" cols=\"50\" class=\"inputModal\" name=\"edit-desc\"\r\n");
      out.write("                                    id=\"edit-desc\"></textarea>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"modal-footer modalBtnContainer-addEvent\">\r\n");
      out.write("                        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">취소</button>\r\n");
      out.write("                        <button type=\"button\" class=\"btn btn-primary\" id=\"save-event\">저장</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"modal-footer modalBtnContainer-modifyEvent\">\r\n");
      out.write("                        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">닫기</button>\r\n");
      out.write("                        <button type=\"button\" class=\"btn btn-danger\" id=\"deleteEvent\">삭제</button>\r\n");
      out.write("                        <button type=\"button\" class=\"btn btn-primary\" id=\"updateEvent\">저장</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div><!-- /.modal-content -->\r\n");
      out.write("            </div><!-- /.modal-dialog -->\r\n");
      out.write("        </div><!-- /.modal -->\r\n");
      out.write("\r\n");
      out.write("        <div class=\"panel panel-default\">\r\n");
      out.write("\r\n");
      out.write("            <div class=\"panel-heading\">\r\n");
      out.write("                <h3 class=\"panel-title\">필터</h3>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write("            <div class=\"panel-body\">\r\n");
      out.write("\r\n");
      out.write("                <div class=\"col-lg-6\">\r\n");
      out.write("                    <label for=\"calendar_view\">구분별</label>\r\n");
      out.write("                    <div class=\"input-group\">\r\n");
      out.write("                        <select class=\"filter\" id=\"type_filter\" multiple=\"multiple\">\r\n");
      out.write("                            <option value=\"카테고리1\">카테고리1</option>\r\n");
      out.write("                            <option value=\"카테고리2\">카테고리2</option>\r\n");
      out.write("                            <option value=\"카테고리3\">카테고리3</option>\r\n");
      out.write("                            <option value=\"카테고리4\">카테고리4</option>\r\n");
      out.write("                        </select>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"col-lg-6\">\r\n");
      out.write("                    <label for=\"calendar_view\">등록자</label>\r\n");
      out.write("                    <div class=\"input-group\">\r\n");
      out.write("                 \r\n");
      out.write("                        <label class=\"checkbox-inline\"><input class='filter' type=\"checkbox\" value=\"brownPoodle\"\r\n");
      out.write("                                checked>");
      out.print( m_nick );
      out.write("</label>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- /.filter panel -->\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- /.container -->\r\n");
      out.write("    <script src=\"/kosSpring/calendar/vendor/js/jquery.min.js\"></script>\r\n");
      out.write("    <script src=\"/kosSpring/calendar/vendor/js/bootstrap.min.js\"></script>\r\n");
      out.write("    <script src=\"/kosSpring/calendar/vendor/js/moment.min.js\"></script>\r\n");
      out.write("    <script src=\"/kosSpring/calendar/vendor/js/fullcalendar.min.js\"></script>\r\n");
      out.write("    <script src=\"/kosSpring/calendar/vendor/js/ko.js\"></script>\r\n");
      out.write("    <script src=\"/kosSpring/calendar/vendor/js/select2.min.js\"></script>\r\n");
      out.write("    <script src=\"/kosSpring/calendar/vendor/js/bootstrap-datetimepicker.min.js\"></script>\r\n");
      out.write("    <script src=\"/kosSpring/calendar/js/main.js\"></script>\r\n");
      out.write("    <script src=\"/kosSpring/calendar/js/addEvent.js\"></script>\r\n");
      out.write("    <script src=\"/kosSpring/calendar/js/editEvent.js\"></script>\r\n");
      out.write("    <script src=\"/kosSpring/calendar/js/etcSetting.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
