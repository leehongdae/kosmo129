/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.87
 * Generated at: 2023-07-28 09:57:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import a.b.c.com.kos.board.vo.KosBoardVO;
import a.b.c.com.common.CodeUtil;
import java.util.List;

public final class boardSelect_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1667440146000L));
    _jspx_dependants.put("jar:file:/C:/00.KOSMO129/30.web/el_kos_spring_work/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/kosSpring/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("a.b.c.com.kos.board.vo.KosBoardVO");
    _jspx_imports_classes.add("a.b.c.com.common.CodeUtil");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("\r\n");
 request.setCharacterEncoding("UTF-8");
      out.write(' ');
      out.write('\r');
      out.write('\n');
	
	Object obj = request.getAttribute("listS");
	if (obj == null) return;

	List<KosBoardVO> list = (List<KosBoardVO>)obj;	
	int nCnt = list.size();
	
	KosBoardVO _kbvo = null;
	if (nCnt == 1){
		_kbvo = list.get(0);
	}	

      out.write(" \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<meta charset=\"UTF-8\">\r\n");
      out.write("		<title>Insert title here</title>\r\n");
      out.write("		<script  src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("		<script type=\"text/javascript\">\r\n");
      out.write("			\r\n");
      out.write("			$(document).ready(function() {\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("				//$('#fileName').text(testName);\r\n");
      out.write("				\r\n");
      out.write("				$(document).on('change', '#in_file', function() {\r\n");
      out.write("					alert(\">>> change\");\r\n");
      out.write("					var testName = $('#in_file').val();\r\n");
      out.write("					console.log(\">>> filename : \" + testName);\r\n");
      out.write("					var testName01 = testName.split(\"\\\\\");\r\n");
      out.write("					console.log(\">>> filename : \" + testName01[2]);\r\n");
      out.write("					$('#fileName').text(testName01[2]);\r\n");
      out.write("				});\r\n");
      out.write("				\r\n");
      out.write("				$(document).on('click', '#pwbtn', function() {\r\n");
      out.write("					alert(\">>> pwbtn.click() in\");\r\n");
      out.write("					\r\n");
      out.write("					let pwcheckURL = \"boardPwCheck.lhd\";\r\n");
      out.write("					let reqType =\"POST\";\r\n");
      out.write("					let dataParam = {\r\n");
      out.write("						bnum: $(\"#bnum\").val(),\r\n");
      out.write("						bpw: $(\"#bpw\").val(),\r\n");
      out.write("					};\r\n");
      out.write("					console.log(\">>> dataparam : \" + dataParam);\r\n");
      out.write("					\r\n");
      out.write("					$.ajax({\r\n");
      out.write("						url: pwcheckURL,\r\n");
      out.write("						type: reqType,\r\n");
      out.write("						data: dataParam,\r\n");
      out.write("						success: whenSuccess,\r\n");
      out.write("						error: whenError\r\n");
      out.write("					});\r\n");
      out.write("					\r\n");
      out.write("					function whenSuccess(reqData){\r\n");
      out.write("						console.log(\">>> reqData : \" + reqData);\r\n");
      out.write("						if(\"PW_YES\" == reqData) {\r\n");
      out.write("							alert(\">>> 비밀번호 good.\");\r\n");
      out.write("							$(\"#U\").css('background-color', 'yellow');							\r\n");
      out.write("						}else if (\"PW_NO\" == reqData){\r\n");
      out.write("							alert(\">>> 비밀번호 bad.\");\r\n");
      out.write("							return;\r\n");
      out.write("						}\r\n");
      out.write("					}\r\n");
      out.write("					function whenError(e) {\r\n");
      out.write("						console.log(\">>> e : \" + e.respobnseText);\r\n");
      out.write("					}	\r\n");
      out.write("					\r\n");
      out.write("				}); // end of pwbtn.click()\r\n");
      out.write("				\r\n");
      out.write("				// U\r\n");
      out.write("				$(document).on('click', '#U', function(e) {\r\n");
      out.write("					alert(\"U\");\r\n");
      out.write("					e.preventDefault();\r\n");
      out.write("					$(\"#boardUpdateForm\").attr({'method':'GET', 'action':'boardUpdate.lhd'}).submit();\r\n");
      out.write("				});\r\n");
      out.write("				\r\n");
      out.write("				// D\r\n");
      out.write("				$(document).on('click', '#D', function(e) {\r\n");
      out.write("					alert(\"D\");\r\n");
      out.write("					e.preventDefault();\r\n");
      out.write("					$('#boardUpdateForm').attr({'method':'GET', 'action':'boardDelete.lhd'}).submit();\r\n");
      out.write("				});\r\n");
      out.write("				\r\n");
      out.write("			}); // end of ready()\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("		</script>\r\n");
      out.write("		<style type=\"text/css\">\r\n");
      out.write("	\r\n");
      out.write("			div {		 \r\n");
      out.write("				margin: 0 auto; 		\r\n");
      out.write("				border:1px solid #6d82f3;\r\n");
      out.write("				display:table;\r\n");
      out.write("			}			\r\n");
      out.write("		\r\n");
      out.write("			table, h3 {		\r\n");
      out.write("				border: 1px;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			table {\r\n");
      out.write("			   width: 100%;\r\n");
      out.write("			   border: 1px solid #444;\r\n");
      out.write("			   border-collapse: collapse;\r\n");
      out.write("		  	}\r\n");
      out.write("			\r\n");
      out.write("			th, td {\r\n");
      out.write("			   border: 1px solid #444;\r\n");
      out.write("			   padding: 10px;\r\n");
      out.write("			}	\r\n");
      out.write("			.mem{ text-align: center;}\r\n");
      out.write("			\r\n");
      out.write("			.input-file-button{\r\n");
      out.write("				padding: 2px 5px;\r\n");
      out.write("				margin: 2px 2px;\r\n");
      out.write("				background-color:#FF6600;\r\n");
      out.write("				border-radius: 4px;\r\n");
      out.write("				color: white;\r\n");
      out.write("				cursor: pointer;\r\n");
      out.write("				}\r\n");
      out.write("		</style>\r\n");
      out.write("	</head>\r\n");
      out.write("	<body>\r\n");
      out.write("	<h3 style=\"text-align:center;\">게시글 내용</h3>\r\n");
      out.write("	<hr>\r\n");
      out.write("		<div>\r\n");
      out.write("			<form name=\"boardUpdateForm\" id=\"boardUpdateForm\">\r\n");
      out.write("				<table>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td colspan=\"2\" align=\"center\">게시판 글수정하기</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<tr>\r\n");
      out.write("						<td class=\"mem\">글번호</td>\r\n");
      out.write("						<td><input type=\"text\" name=\"bnum\" id=\"bnum\" value=\"");
      out.print( _kbvo.getBnum() );
      out.write("\" readonly/></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td class=\"mem\">제목</td>\r\n");
      out.write("						<td>\r\n");
      out.write("						<input type=\"text\" name=\"bsubject\" id=\"bsubject\" value=\"");
      out.print( _kbvo.getBsubject() );
      out.write("\" style=\"width:100px\"  readonly/>\r\n");
      out.write("						</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<tr>\r\n");
      out.write("						<td class=\"mem\">이름</td>\r\n");
      out.write("						<td><input type=\"text\" name=\"bname\" id=\"bname\" value=\"");
      out.print(  _kbvo.getBname() );
      out.write("\" readonly/></td>\r\n");
      out.write("					</tr>				\r\n");
      out.write("				 \r\n");
      out.write("					<tr>\r\n");
      out.write("						<td class=\"mem\">소개글</td>\r\n");
      out.write("						<td>\r\n");
      out.write("						<textarea name=\"bcontent\" id=\"bcontent\" rows=\"5\" cols=\"50\">");
      out.print( _kbvo.getBcontent() );
      out.write("					\r\n");
      out.write("						</textarea>\r\n");
      out.write("						</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<tr>\r\n");
      out.write("						<td class=\"mem\">사진</td>\r\n");
      out.write("						<td> \r\n");
      out.write("							<label for=\"in_file\" class=\"input-file-button\" id=\"input-file-button\">\r\n");
      out.write("								UPLOAD\r\n");
      out.write("								<input type='file' id='in_file' style=\"display:none;\">\r\n");
      out.write("							</label>\r\n");
      out.write("							<span id=\"fileName\">");
      out.print(  _kbvo.getBfile() );
      out.write("</span>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td class=\"mem\">등록일</td>\r\n");
      out.write("						<td> \r\n");
      out.write("						<input type=\"text\" name=\"sbinsertdate\" id=\"sbinsertdate\" value=\"");
      out.print( _kbvo.getInsertdate() );
      out.write("\" readonly />		      \r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>	 \r\n");
      out.write("						<td class=\"mem\">수정일</td>\r\n");
      out.write("						<td>\r\n");
      out.write("						<input type=\"text\" name=\"sbupdatedate\" id=\"sbupdatedate\" value=\"");
      out.print( _kbvo.getUpdatedate() );
      out.write("\" readonly />		      \r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td class=\"mem\">패스워드</td>\r\n");
      out.write("						<td>\r\n");
      out.write("						<input type=\"text\" name=\"bpw\" id=\"bpw\" />\r\n");
      out.write("						<button type=\"button\" id=\"pwbtn\">비밀번호</button>\r\n");
      out.write("						\r\n");
      out.write("					</td>	 	 \r\n");
      out.write("					<tr>\r\n");
      out.write("						<td colspan=\"2\" align=\"right\"> 		\r\n");
      out.write("						<button type=\"button\" id=\"U\">수정</button>\r\n");
      out.write("						<button type=\"button\" id=\"D\">삭제</button>\r\n");
      out.write("						</td>				\r\n");
      out.write("					</tr>\r\n");
      out.write("				</table>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("<!-- 	<!-- 댓글 처리 하는 루틴  -->\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("	</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
