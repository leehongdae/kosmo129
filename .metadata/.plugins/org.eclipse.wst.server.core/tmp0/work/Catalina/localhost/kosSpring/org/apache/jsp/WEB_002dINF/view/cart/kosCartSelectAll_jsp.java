/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.87
 * Generated at: 2023-06-15 12:14:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.cart;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import a.b.c.com.kos.cart.vo.KosCartVO;
import java.util.List;
import a.b.c.com.common.NumUtil;
import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;

public final class kosCartSelectAll_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.apache.log4j.Logger");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("a.b.c.com.kos.cart.vo.KosCartVO");
    _jspx_imports_classes.add("a.b.c.com.common.NumUtil");
    _jspx_imports_classes.add("org.apache.log4j.LogManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 request.setCharacterEncoding("UTF-8"); 
      out.write('\r');
      out.write('\n');

	Logger logger = LogManager.getLogger(this.getClass());
	logger.info(">>> kosCartSelectAll.jsp In");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<meta charset=\"UTF-8\">\r\n");
      out.write("		<title>Insert title here</title>\r\n");
      out.write("		<script type=\"text/javascript\" src=\"/kosmoSpring/js/common.js\"></script>\r\n");
      out.write("		<script src=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\r\n");
      out.write("		<script type=\"text/javascript\">\r\n");
      out.write("			\r\n");
      out.write("			$(document).ready(function() {\r\n");
      out.write("				\r\n");
      out.write("				$(document).on('click', '#chek', function(){\r\n");
      out.write("					if($(this).prop('checked')) {\r\n");
      out.write("						$('.kcnum').prop('checked', true);						\r\n");
      out.write("					}else {\r\n");
      out.write("						$('.kcnum').prop('checked', false);						\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("				\r\n");
      out.write("				$(document).on('click', '#chek', function() {\r\n");
      out.write("					alert(\">>> delBtn : \");\r\n");
      out.write("					let  kcnumV = $(this).val();\r\n");
      out.write("					alert(\">>> kcnumV : \" + kcnumV);\r\n");
      out.write("					\r\n");
      out.write("					location.href=\"kosCartDelete.k?kcnumV=\"+kcnumV;\r\n");
      out.write("				});\r\n");
      out.write("				\r\n");
      out.write("				$(document).on('click','#delsBtn', function(){\r\n");
      out.write("					cart_delete();\r\n");
      out.write("				});\r\n");
      out.write("				\r\n");
      out.write("				$(document).on('click', '#delAllBtn', function(){\r\n");
      out.write("					cart_delete();\r\n");
      out.write("				});\r\n");
      out.write("				\r\n");
      out.write("				function cart_delete() {\r\n");
      out.write("					\r\n");
      out.write("					if($('.kcnum:checked').length == 0) {\r\n");
      out.write("						alert(\"삭제할상품 하나 이상을 선택하세요.\");\r\n");
      out.write("						return;\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("					var kcnum = [];\r\n");
      out.write("					$(\"input:checkbox[name='kcnum']:checked\").each(function(){\r\n");
      out.write("						kcnum.push($(this).val());\r\n");
      out.write("						console.log(kcnum);\r\n");
      out.write("					});\r\n");
      out.write("					\r\n");
      out.write("					$(\"#productList\").attr({\r\n");
      out.write("						\"action\":\"kosCartDeleteArray.lhd\",\r\n");
      out.write("						\"method\":\"GET\"\r\n");
      out.write("					}).submit();\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				$(document).on('click', '#shopingBtn', function() {\r\n");
      out.write("					alert(\">>> shopingBtn :\");\r\n");
      out.write("					location.href=\"kosProductSelectAll.lhd\";\r\n");
      out.write("				});\r\n");
      out.write("				\r\n");
      out.write("				$(document).on('click', '#buyBtn', function() {\r\n");
      out.write("					alert(\">>> buyBtn In\");\r\n");
      out.write("					\r\n");
      out.write("					$(\"#productList\").attr({\r\n");
      out.write("						'action': 'kosOrderInsertForm.lhd',\r\n");
      out.write("						'method': 'GET'\r\n");
      out.write("						\r\n");
      out.write("					}).submit();\r\n");
      out.write("				});\r\n");
      out.write("			});\r\n");
      out.write("		</script>\r\n");
      out.write("	</head>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<body>\r\n");
      out.write("	<h3 align=\"center\">장바구니</h3>\r\n");
      out.write("	<hr>\r\n");
      out.write("		<form name=\"productList\" id=\"productList\">\r\n");
      out.write("			<table border=\"1\" align=\"center\">\r\n");
      out.write("				<thead>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td align=\"center\">\r\n");
      out.write("							<input type=\"checkbox\" name=\"chek\" id=\"chek\" class=\"chek\">\r\n");
      out.write("						</td>\r\n");
      out.write("						<td align=\"center\">상품명</td>\r\n");
      out.write("						<td align=\"center\">가격</td>\r\n");
      out.write("						<td align=\"center\">수량</td>\r\n");
      out.write("						<td align=\"center\">합계</td>	\r\n");
      out.write("						<td align=\"center\">적립금</td>	\r\n");
      out.write("						<td align=\"center\">배송비</td>\r\n");
      out.write("						<td align=\"center\">관심상품/삭제</td>		\r\n");
      out.write("					</tr>\r\n");
      out.write("				</thead>\r\n");
      out.write("				<tbody>\r\n");
      out.write("					");

					String kpnum = "";
					String kpprice = "";
					String kppricesum = "";
					int sum = 0;
					String sumV = "";
					
					Object obj = request.getAttribute("listS");
					if (obj == null){	
					
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("					<td colspan=\"8\" align=\"center\">\r\n");
      out.write("						<h2>장바구니에 상품을 담으세요</h2> \r\n");
      out.write("					</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					");
	
					}else{
						List<KosCartVO> list = (List<KosCartVO>)obj;
						int nCnt = list.size();
					
						logger.info("list.size() >>> : " + list.size());	
						
						for(int i=0; i < nCnt; i++){		
							KosCartVO _kcvo = list.get(i);
							kpprice = NumUtil.comma(_kcvo.getKpprice());
							kppricesum = NumUtil.comma(_kcvo.getKppricesum());
							sum += Integer.parseInt(_kcvo.getKppricesum());
					
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td align=\"center\">\r\n");
      out.write("							<input type=\"checkbox\" name=\"kcnum\" id=\"kcnum\" class=\"kcnum\" value=");
      out.print( _kcvo.getKcnum() );
      out.write(" >\r\n");
      out.write("						</td>		\r\n");
      out.write("						<td class=\"tt\">\r\n");
      out.write("							<img src=\"/kosSpring/fileupload/product/");
      out.print( _kcvo.getKpfile() );
      out.write("\" width=\"50\" height=\"50\">\r\n");
      out.write("							");
      out.print( _kcvo.getKpid() );
      out.write(" \r\n");
      out.write("						</td>\r\n");
      out.write("						<td class=\"tt\">");
      out.print( kpprice );
      out.write(" </td>\r\n");
      out.write("						<td class=\"tt\">");
      out.print( _kcvo.getKpcnt() );
      out.write(" </td>\r\n");
      out.write("						<td class=\"tt\">");
      out.print( kppricesum );
      out.write(" </td>\r\n");
      out.write("						<td class=\"tt\">적립금</td>\r\n");
      out.write("						<td class=\"tt\">배송비</td>\r\n");
      out.write("						<td class=\"tt\" align=\"center\">		\r\n");
      out.write("							<input type=\"button\" value=\"관심상품\" /><br>\r\n");
      out.write("							<button type=\"button\" class=\"delBtn\" name=\"delsBtn\" id=\"delsBtn\" value=");
      out.print( _kcvo.getKcnum() );
      out.write(" >삭제</button><br>\r\n");
      out.write("						</td>	\r\n");
      out.write("					</tr>	\r\n");
      out.write("					");

						} // end of for
					} // end of else	
						
					
      out.write("	\r\n");
      out.write("					<tr>\r\n");
      out.write("					<td colspan=\"8\" align=\"right\">총 구매 금액  ");
      out.print( NumUtil.comma(String.valueOf(sum)) );
      out.write("원</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("					<td colspan=\"8\" align=\"right\">\r\n");
      out.write("						결제 예정금액 <font size=\"5\" style=\"color:red;\"> ");
      out.print( NumUtil.comma(String.valueOf(sum)) );
      out.write("</font>원\r\n");
      out.write("					</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td colspan=\"8\" align=\"left\">		\r\n");
      out.write("							<input type=\"button\" value=\"선택삭제\" id='delsBtn'>	\r\n");
      out.write("							<input type=\"button\" value=\"장바구니 비우기\" id='delAllBtn'>\r\n");
      out.write("							 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n");
      out.write("							<input type=\"button\" value=\"쇼핑하기\" id='shopingBtn'>							\r\n");
      out.write("							<input type=\"button\" value=\"주문하기\" id='buyBtn'>							\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>					\r\n");
      out.write("				</tbody>			\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>	\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
